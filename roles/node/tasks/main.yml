---
- name: Installing docker, step 1
  apt: name={{item}} state=absent
  with_items:
    - docker
    - docker-engine
    - docker.io
    - containerd
    - runc

- name: Installing docker, step 2
  apt: 
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400

- name: Installing docker, step 3
  apt: name={{item}} state=present
  with_items:
  - apt-transport-https
  - ca-certificates
  - curl
  - software-properties-common

- name: add GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: add docker repository to apt
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: Installing docker, final
  apt: name={{item}} state=present
  with_items:
  - docker-ce
  - docker-ce-cli
  - containerd.io

- name: Docker is running
  systemd:
    name: docker
    enabled: yes
    state: started

- name: Gather Facts for EC2 Instance
  ec2_metadata_facts:

- name: Replace ip in nginx.conf
  replace:
    path: /etc/nginx/nginx.conf
    regexp: "{{app_name}}"
    replace: "{{ansible_ec2_public_ipv4}}"
  delegate_to: "{{item}}"
  with_items: "{{groups['tag_Name_Balancer']}}"

- name: Display Public IP Address
  debug:
    var: ansible_ec2_public_ipv4


- name: Starting docker
  shell: >
    sudo docker pull crocodility/simple-api:main && \
    sudo docker run -d -p 9007:9007 crocodility/simple-api:main

- name: Set up prometheus
  template: src=templates/prometheus.yml.j2 dest=/tmp/prometheus.yml force=yes
  delegate_to: "{{item}}"
  with_items: "{{groups['tag_Name_Monitoring']}}"

- name: Starting node Exporter
  shell: >
    sudo docker run -d -p 9100:9100 -v "/proc:/host/proc" -v "/sys:/host/sys" -v "/:/rootfs" --net="host" prom/node-exporter -collector.procfs /host/proc -collector.sysfs /host/proc -collector.filesystem.ignored-mount-points "^/(sys|proc|dev|host|etc)($|/)"